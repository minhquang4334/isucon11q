user www-data;
worker_processes 1; # autoにしたら、コア数と同じ数まで増やすが、Isuconならただ1コアのCPUしか提供してくれないので、1にしても問題ない
pid /run/nginx.pid;
include /etc/nginx/modules-enabled/*.conf;
worker_rlimit_nofile 16000; # worker_connectionsの4倍 程度

events {
  worker_connections 4096; 
}

http {
  include       /etc/nginx/mime.types;
  default_type  application/octet-stream;

  # tcp
  tcp_nopush  on; # nginxはデフォルトでファイルを送り出す際にsendfileシステムコールを使いますが、sendfileの前に動くHTTPヘッダのパケット書き出しを遅延させ、ヘッダとファイルの中身を一度に送り出すように調整します
  tcp_nodelay on;

  # log
  log_format main "time:$time_local"
  "\thost:$remote_addr"
  "\tforwardedfor:$http_x_forwarded_for"
  "\treq:$request"
  "\tmethod:$request_method"
  "\turi:$request_uri"
  "\tstatus:$status"
  "\tsize:$body_bytes_sent"
  "\treferer:$http_referer"
  "\tua:$http_user_agent"
  "\treqtime:$request_time"
  "\truntime:$upstream_http_x_runtime"
  "\tapptime:$upstream_response_time"
  "\tcache:$upstream_http_x_cache"
  "\tvhost:$host";

  access_log /var/log/nginx/access.log main;
  error_log /var/log/nginx/error.log;

  sendfile            on;
  server_tokens       off;
  keepalive_timeout   3;
  types_hash_max_size 2048;
  
  gzip on;
  gzip_proxied off;
  gzip_static on;
  gzip_vary on;
  
  open_file_cache max=200000 inactive=20s;
  open_file_cache_valid 30s;
  open_file_cache_min_uses 2;
  open_file_cache_errors on;

  # upstream backend {
  #   server 192.168.0.11 weight=4; 
  #   server 192.168.0.12:3000 weight=4; 
  #   # server 192.168.0.13 weight=2; 
  # }

  server {
    listen 443 ssl http2;

    ssl_certificate /etc/nginx/certificates/tls-cert.pem;
    ssl_certificate_key /etc/nginx/certificates/tls-key.pem;

    location / {
        proxy_set_header Host $http_host;
        proxy_pass http://127.0.0.1:3000;
    }

    location /api/condition {
        proxy_set_header Host $http_host;
        proxy_pass http://192.168.0.12:3000;
    }
    
    location /assets/(?:jpeg|jpg|png|gif|css|js|eot|svg|ttf|woff|woff2|ico)$ {
    	expires 1M;
    	access_log off;
    	add_header Cache-Control "public";
    }
  }
}
